name: Terraform-EC2/deployment

on: workflow_dispatch

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout GitHub Actions'
        uses: actions/checkout@v4

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.3

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: eu-central-1

      - name: 'Terraform Init'
        run: terraform init
        working-directory: ./ansible-terraform-day3/terraform

      - name: 'Terraform Format'
        run: terraform fmt --check
        working-directory: ./ansible-terraform-day3/terraform

      - name: 'Terraform Validate'
        run: terraform validate
        working-directory: ./ansible-terraform-day3/terraform

      - name: 'Terraform Plan'
        run: terraform plan
        working-directory: ./ansible-terraform-day3/terraform

      - name: 'Terraform Apply'
        run: terraform apply -auto-approve
        working-directory: ./ansible-terraform-day3/terraform

      
      - name: Output EC2 instance IPs
        id: ec2_ips
        run: |
          public_ips=$(terraform output -json public_ips)
          nginx_ip=$(echo $public_ips | jq -r '.[0]')
          httpd_ip=$(echo $public_ips | jq -r '.[1]')
          nginx2_ip=$(echo $public_ips | jq -r '.[2]')
          echo "::set-output name=nginx_ip::$nginx_ip"
          echo "::set-output name=httpd_ip::$httpd_ip"
          echo "::set-output name=nginx_ip::$nginx2_ip"
        working-directory: ./ansible-terraform-day3/terraform
